# SPDX-FileCopyrightText: Â© 2025 open-nudge <https://github.com/open-nudge>
# SPDX-FileContributor: szymonmaszke <github@maszke.co>
#
# SPDX-License-Identifier: Apache-2.0

---
header:
  schema-version: "1.0.0"
  last-updated: "2025-06-15"
  expiration-date: "2026-05-15T10:30:31Z"
  project-url: >
    https://github.com/open-nudge/opentemplate
  changelog: >
    https://github.com/open-nudge/opentemplate/blob/main/CHANGELOG.md
  license: >
    https://github.com/open-nudge/opentemplate/blob/main/LICENSE.md
project-lifecycle:
  status: "wip"
  bug-fixes-only: false
  core-team:
    - name: "open-nudge"
      uri: "https://github.com/open-nudge"
      role: "owner"
  roadmap: >
    https://github.com/open-nudge/opentemplate/blob/main/ROADMAP.md
contribution-policy:
  accepts-pull-requests: true
  accepts-automated-pull-requests: true
  code-of-conduct: >
    https://github.com/open-nudge/opentemplate/blob/main/CODE_OF_CONDUCT.md
  contributing-policy: >
    https://github.com/open-nudge/opentemplate/blob/main/CONTRIBUTING.md
documentation:
  - "https://open-nudge.github.io/opentemplate"
distribution-points:
  - "https://github.com/open-nudge/opentemplate"
  - "https://github.com/open-nudge/opentemplate/releases"
security-artifacts:
  threat-model:
    threat-model-created: false
  self-assessment:
    self-assessment-created: true
    evidence-url:
      - "https://github.com/open-nudge/opentemplate/blob/master/SECURITY-SELF-ASSESSMENT.md"
security-testing:
  # SCA
  - tool-type: "sca"
    tool-name: "Renovate"
    tool-url: "https://docs.renovatebot.com/"
    tool-version: "latest"
    integration:
      ad-hoc: false
      ci: true
      before-release: false
    comment: |
      - "Renovatebot is enabled for this repo and ran periodically."
  - tool-type: "sca"
    tool-name: "GitHub Actions dependency review"
    tool-url: "https://github.com/actions/dependency-review-action"
    tool-version: "latest"
    integration:
      ad-hoc: false
      ci: true
      before-release: true
    comment: |
      - "Dependency review action is ran during CI and before every release."
      - "It checks for vulnerabilities in the dependencies of the project."
      - "Low severity brings alerts to the PR (although PR might be merged)."
  # SAST
  - tool-type: "sast"
    tool-name: "Security Scorecard"
    tool-url: "https://openssf.org/projects/scorecard/"
    tool-version: "latest"
    integration:
      ad-hoc: false
      ci: true
      before-release: false
    comment: |
      - "OpenSSF Scorecard is run periodically on the main branch."
      - "It assess the security posture of the project."
      - Sarif files are uploaded to the GitHub Security tab
      (only for open source projects)
  - tool-type: "sast"
    tool-name: "Semgrep"
    tool-url: "https://semgrep.dev/"
    tool-version: "latest"
    integration:
      ad-hoc: false
      ci: true
      before-release: true
    comment: |
      - "Semgrep security analysis is ran during CI and before every release."
      - "It checks for known Python vulnerabilities."
      - "It is an open-source version instead of Semgrep CI"
      - Sarif files are uploaded to the GitHub Security tab
      (for open source projects)
  - tool-type: "sast"
    tool-name: "Pre-commit hooks"
    tool-url: >
      https://github.com/open-nudge/opentemplate/blob/main/.pre-commit-config.yaml
    tool-version: "latest"
    integration:
      ad-hoc: true
      ci: false
      before-release: false
    comment: |
      - "Pre-commit hooks are used for static analysis and code formatting."
      - "Check the URL for the list of pre-commit hooks."
      - "WARNING: These hooks are not ran during CI, only locally."
      - "WARNING: These hooks might be skipped by the developer"
      - INFO: Similar/the same hooks are also ran during CI
      (with exception of gitleaks: https://github.com/gitleaks/gitleaks and
      pre-commit-hooks: https://github.com/pre-commit/pre-commit-hooks)
  # Fuzzing
  - tool-type: "fuzz"
    tool-name: "Hypothesis"
    tool-url: "https://hypothesis.readthedocs.io/en/latest/"
    tool-version: "latest"
    integration:
      ad-hoc: false
      ci: true
      before-release: true
    comment: |
      - "Hypothesis is used for property-based testing."
      - "It is ran as a pre-commit hook and during CI."
security-contacts:
  - type: "website"
    value: >
      https://github.com/open-nudge/opentemplate/security/policy
vulnerability-reporting:
  accepts-vulnerability-reports: true
  security-policy: >
    https://github.com/open-nudge/opentemplate/security/policy
  comment: >
    The first and best way to report a vulnerability is by using
    private security issues in GitHub.
dependencies:
  third-party-packages: true
  dependencies-lists:
    - "https://github.com/open-nudge/opentemplate/blob/main/pyproject.toml"
  env-dependencies-policy:
    policy-url: >
      https://github.com/open-nudge/opentemplate/blob/main/SECURITY-DEPENDENCY.md
  sbom:
    - sbom-file: >
        https://github.com/open-nudge/opentemplate/releases
      sbom-format: "spdx"
      sbom-url: >
        https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/exporting-a-software-bill-of-materials-for-your-repository
      sbom-creation: |
        GitHub SBOM is created by CI using GitHub CLI for every release.

        This SBOM file mostly contains automatically detected dependencies
        by GitHub (e.g. GitHub Actions, workflows etc.)

        Note: This SBOM does not contain Python dependencies, it is included
        in the cyclonedx SBOM!

        It can be accessed from the release page of the repository or from
        the Insights tab of the repository (as described by sbom-url).
    - sbom-file: >
        https://github.com/open-nudge/opentemplate/releases
      sbom-format: "cyclonedx"
      sbom-url: "https://github.com/CycloneDX/cyclonedx-python"
      sbom-creation: |
        Python CycloneDX SBOM is created by CI using GitHub CLI
        for every release.

        This SBOM file contains automatically detected Python dependencies
        of the project (generated by CycloneDX).

        Note: This SBOM does not contain non-Python dependencies, it is included
        in the GitHub SBOM!

        It can be accessed from the release page of the repository or from
        the Insights tab of the repository (as described by sbom-url).
...
