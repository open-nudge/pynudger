# SPDX-FileCopyrightText: Â© 2025 open-nudge <https://github.com/open-nudge>
# SPDX-FileContributor: szymonmaszke <github@maszke.co>
#
# SPDX-License-Identifier: Apache-2.0

---
name: "Template Setup"

on:
  push:
    branches:
      - "main"

permissions: {} # yamllint disable-line rule:braces

jobs:
  skeleton:
    timeout-minutes: 30
    name: "Skeleton"
    permissions:
      contents: "write"
    if: >
      github.event.head_commit.message == 'Initial commit'
    runs-on: "ubuntu-latest"
    steps:
      - name: "Harden Runner"
        # yamllint disable rule:line-length
        uses: "step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0" # v2.12.0
        # yamllint enable rule:line-length
        with:
          disable-sudo-and-containers: true
          egress-policy: "block"
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            pdm-project.org:443
            pdm.fming.dev:443
            pypi.org:443
            raw.githubusercontent.com:443
            objects.githubusercontent.com:443
            release-assets.githubusercontent.com:443
      - name: "Check Description provided"
        # yamllint disable rule:indentation
        env:
          DESCRIPTION: "${{ github.event.repository.description }}"
        run: |
          if [ "${DESCRIPTION}" == "" ]; then
            echo "Repository description is missing"
            exit 1
          fi
        # yamllint enable rule:indentation
      - name: "Checkout repository" # zizmor: ignore[artipacked]
        # yamllint disable rule:line-length
        uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683" # v4.2.2
        # yamllint enable rule:line-length
      - name: "Setup template"
        # yamllint disable rule:line-length
        uses: "open-nudge/opentemplate/.github/actions/template-setup@main" # zizmor: ignore[unpinned-uses]
        # yamllint enable rule:line-length
        with:
          template-repository: "opentemplate"
          repository: "${{ github.event.repository.name }}"
          template-owner: "open-nudge"
          owner: "${{ github.repository_owner }}"
          template-description: >-
            All-in-one Python template. One click. Everything included.
          description: "${{ github.event.repository.description }}"
      - name: "Remove template files"
        run: >
          rm -rf
          template-setup
          .github/workflows/template-setup.yml
          .github/workflows/template-test.yml
      - name: "Setup git credentials"
        # yamllint disable rule:line-length
        uses: "open-nudge/opentemplate/.github/actions/git-setup@main" # zizmor: ignore[unpinned-uses]
        # yamllint enable rule:line-length
      - name: "Push changes"
        # __pypackages__ is ignored, but automatic PDM setup needs it for now
        run: |
          git add --all
          git add --force __pypackages__/README.md
          git commit -s -m "fix: setup repository [template]"
          git push
        # harden.yml will wait on gh-pages branch creation
      - name: "Setup gh-pages branch"
        run: |
          git switch --orphan gh-pages
          touch .nojekyll
          echo "[]" > versions.json
      - name: "Create index.html"
        # yamllint disable rule:indentation
        run: |
          cat <<'EOF' > index.html
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>Redirecting</title>
            <noscript>
              <meta http-equiv="refresh" content="1; url=latest/" />
            </noscript>
            <script>
              window.location.replace("latest/" + window.location.hash);
            </script>
          </head>
          <body>
            Redirecting to <a href="latest/">latest/</a>...
          </body>
          </html>
          EOF
        # yamllint enable rule:indentation
      - name: "Commit and push gh-pages branch"
        run: |
          git add --all
          git commit -s -m "fix: setup gh-pages [template]"
          git push -u origin gh-pages
          git checkout main

  settings:
    timeout-minutes: 10
    name: "Settings"
    permissions:
      contents: "read"
      issues: "write"
    if: >
      github.event.head_commit.message == 'Initial commit'
    runs-on: "ubuntu-latest"
    steps:
      - name: "Harden Runner"
        # yamllint disable rule:line-length
        uses: "step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0" # v2.12.0
        # yamllint enable rule:line-length
        with:
          disable-sudo-and-containers: true
          egress-policy: "block"
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            pypi.org:443
      - name: "Checkout repository"
        # yamllint disable rule:line-length
        uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683" # v4.2.2
        # yamllint enable rule:line-length
        with:
          sparse-checkout: |
            template-setup
          persist-credentials: false
      - name: "Remove default labels"
        env:
          GH_TOKEN: "${{ github.token }}"
        run: >
          parallel -j0 --halt now,fail=1 'gh label delete {1} --yes'
          :::
          "bug"
          "documentation"
          "duplicate"
          "enhancement"
          "good first issue"
          "help wanted"
          "invalid"
          "question"
          "wontfix"
      - name: "Create necessary labels for .labeler.yml"
        env:
          GH_TOKEN: "${{ github.token }}"
        run: >
          parallel -j0 --halt now,fail=1
          "gh label create {1} --force --description {2} --color {3}"
          :::
          announcement
          bot
          template
          actions
          deps
          config
          docs
          legal
          security
          tests
          src
          stale
          expired
          feat
          fix
          duplicate
          "help"
          invalid
          wontfix
          python
          question
          feat!
          fix!
          :::+
          "Announcements from maintainers"
          "Bot created changes"
          "Template updates"
          "GitHub Actions updates"
          "Dependencies updates"
          "Configuration files updates"
          "Documentation updates"
          "Legal documents updates"
          "Security updates"
          "Tests updates"
          "Source code updates"
          "Stale pull request"
          "Pull request is expired"
          "New feature or request"
          "Ongoing fix or bug report"
          "This issue or pull request already exists"
          "Maintainers need community help"
          "This issue or pull request is invalid"
          "This will not be worked on"
          "Python related changes"
          "Question about the project"
          "Breaking fix"
          "Breaking feature"
          :::+
          "#EA4335"
          "#9AA0A6"
          "#9AA0A6"
          "#2B3137"
          "#34A853"
          "#EA4335"
          "#34A853"
          "#EA4335"
          "#EA4335"
          "#EA4335"
          "#EA4335"
          "#9AA0A6"
          "#EA4335"
          "#34A853"
          "#EA4335"
          "#9AA0A6"
          "#EA4335"
          "#9AA0A6"
          "#9AA0A6"
          "#A4C330"
          "#34A853"
          "#EA4335"
          "#EA4335"
      - name: "Check dependency graph availability"
        id: "dependency_graph"
        # yamllint disable rule:line-length rule:indentation
        env:
          GH_TOKEN: "${{ github.token }}"
          SBOM_ENDPOINT: >-
            /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/dependency-graph/sbom
        run: |
          if gh api "${SBOM_ENDPOINT}"; then
            echo "enabled=true" >> "${GITHUB_OUTPUT}"
          else
            echo "enabled=false" >> "${GITHUB_OUTPUT}"
          fi
        # yamllint enable rule:line-length rule:indentation
      - name: "Setup Python"
        # yamllint disable rule:line-length
        uses: "actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065" # v5.6.0
        # yamllint enable rule:line-length
        with:
          python-version: "3.x"
      - name: "Install cookiecutter"
        run: >
          pip install cookiecutter
      - name: "Create cookiecutter.json"
        id: "cookiecutter_file"
        # yamllint disable rule:line-length
        env:
          REPOSITORY: "${{ github.event.repository.name }}"
          REPOSITORY_OWNER: "${{ github.repository_owner }}"
          HAS_DEPENDENCY_GRAPH: "${{ steps.dependency_graph.outputs.enabled }}"
          HAS_DISCUSSIONS: "${{ github.event.repository.has_discussions }}"
          HAS_PAGES: "${{ github.event.repository.has_pages }}"
          WEB_COMMIT_SIGNOFF_REQUIRED: "${{ github.event.repository.web_commit_signoff_required }}"
        run: >
          ./template-setup/create-cookiecutter-json.sh
          ./template-setup/settings-issue/cookiecutter.json
          repository "\"${REPOSITORY}\""
          repository_owner "\"${REPOSITORY_OWNER}\""
          has_dependency_graph "${HAS_DEPENDENCY_GRAPH}"
          has_discussions "${HAS_DISCUSSIONS}"
          has_pages "${HAS_PAGES}"
          web_commit_signoff_required "${WEB_COMMIT_SIGNOFF_REQUIRED}"
        # yamllint disable rule:line-length
      - name: "Create issue from template"
        run: >
          cookiecutter --verbose --no-input template-setup/settings-issue
          --output-dir settings_issue
      - name: "Create issue"
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          REPOSITORY: "${{ github.event.repository.name }}"
        run: >
          gh issue create
          --title "Update repository settings"
          --label config,template,security
          --body-file
          "settings_issue/${REPOSITORY}/issue-body.md"
      - name: "Lock the issue"
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          REPOSITORY: "${{ github.event.repository.name }}"
        run: >
          gh issue lock 1

  cache-setup:
    needs: "skeleton"
    name: "Cache Setup"
    permissions:
      contents: "read"
    uses: "open-nudge/opentemplate/.github/workflows/cache-reusable.yml@main" # zizmor: ignore[unpinned-uses]
    # Checkout main as otherwise the files will not be available
    with:
      ref: "main"

  # Add security-scorecard run here as well
  security-scorecard-initial:
    needs: "skeleton"
    name: "Security Scorecard Setup"
    permissions:
      # Required to upload SARIF file to CodeQL.
      # See: https://github.com/github/codeql-action/issues/2117
      actions: "read"
      # Writing security events to upload SARIF file to security tab
      security-events: "write"
      # Only need to read contents
      contents: "read"
      # Needed for GitHub OIDC token if publish_results is true
      id-token: "write"
    uses: "open-nudge/opentemplate/.github/workflows/security-scorecard-reusable.yml@main" # zizmor: ignore[unpinned-uses]
    with:
      sarif: true
...
